---
- hosts: all
  become: True
  gather_facts: True
  tasks:

    - name: Install yum utils
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2

    - name: Remove docker if installed from CentOS repo
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
      become: yes

    - name: Enable Docker Edge repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
      become: yes

    - name: Enable Docker Test repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
      become: yes

    - name: install docker
      yum:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Add user vagrant to docker group
      user:
        name: vagrant
        groups: docker
        append: yes
      become: yes

    - name: Ensure docker is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Get IP
      shell:
        cmd: ip -4  a show eth1 | grep inet | awk '{print$2}'
      register: ipv4_information
    - debug: msg="{{ ipv4_information.stdout }}"

    - name: Get hostname
      shell:
        cmd: hostname
      register: hostname_information
    - debug: msg="{{ hostname_information.stdout }}"

    - name: Get Disk Size
      shell:
        cmd: df -h | grep sda
      register: diskSize_information
    - debug: msg="{{ diskSize_information.stdout }}"

    - name: Showing some information
      debug:
        msg:
        - "Vagrant does not come up with more than 40GB."
        - "It needs specific changes and plugins."
        - "Until now I could not solve this problem."
        - "IP addresses and hostnames are checked."
        - "Docker starts at the system start up."
        - "Until now ansible-galaxy and available roles are not used."
        

  handlers:
    - name: restart docker
      service:
        name: docker
        state: restarted
